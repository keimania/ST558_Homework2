---
title: "Homework2"
format: html
editor: visual
---

# ST558, Jamin Goo (NCSU id : jgoo)

## Homework2

### Task 1: Basic Vector practice

• 120, 151, 125, 126, 115, 132, 132, 129, 134, 139, 127, 122, 127, 135, 133, 128, 147, 138, 140, 132

• 127, 145, 135, 122, 115, 122, 123, 126, 126, 129, 132, 146, 120, 114, 121, 120, 128, 120, 133, 115

1.  Create two vectors. One vector corresponding to the pre measurements and one to the post measure ments.

```{r}
pre_bp <- c(120, 151, 125, 126, 115, 132, 132, 129, 134, 139, 127, 122, 127, 135, 133, 128, 147, 138, 140, 132)
pre_bp
post_bp <- c(127, 145, 135, 122, 115, 122, 123, 126, 126, 129, 132, 146, 120, 114, 121, 120, 128, 120, 133, 115)
post_bp
```

2.  Assign names to the vector elements using the paste() function. Note that names() can be overwritten by a character vector.

```{r}
patient <- paste("Subject", 1:20, sep = "_")
names(pre_bp) <- patient
names(post_bp) <- patient
```

3.  Calculate the change in blood pressure for each patient by subtracting post-treatment measurements from pre-treatment measurements.

```{r}
diff_bp <- pre_bp - post_bp
diff_bp
```

4.  Calculate the average decrease in blood pressure across all patients.

```{r}
mean(diff_bp)
```

5.  Determine which patients experienced a decrease in blood pressure after treatment (a positive change).

```{r}
which(diff_bp>0)
```

6.  Subset the vector of differences to only return those that have a positive change.

```{r}
diff_posi <- diff_bp[diff_bp>0]
diff_posi
```

7.  Calculate the average decrease in blood pressure for those where the blood pressure decreased

```{r}
mean(diff_posi)
```

### Task 2: Basic Data Frame practice

1.  Create a data frame object with four columns corresponding to your data above: patient, pre_bp, post_bp, and diff_bp

```{r}
bp_df <- data.frame(
  patient = patient,
  pre_bp = pre_bp,
  post_bp = post_bp,
  diff_bp = diff_bp
)
bp_df
```

2.  Return only rows of the data frame where the diff_bp column is negative.

```{r}
bp_df[bp_df$diff_bp < 0, ]
```

3.  Add a new column to the data frame corresponding to TRUE if the post_bp is less than 120 and FALSE if it is not.

```{r}
bp_df$bp_lower_120 <- bp_df$post_bp < 120
bp_df
```

4.  Finally, print the data frame out nicely in your final document by modifying the code below appropriately.

```{r}
knitr::kable(bp_df)
```

### Task 3: List practice

We have the following pre-treatment values for subjects 1 through 10 (different set of subjects): • 138, 135, 147, 117, 152, 134, 114, 121, 131, 130 after treatment, the subjects were measured again (subjects 1 through 10 match) • 105, 136, 123, 130, 134, 143, 135, 139, 120, 124

1.  Create a new data frame with this data in it that is similar to the data frame from task 2.

```{r}
pre_bp_2 <- c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130)
post_bp_2 <- c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124)
patient_2 <- paste("Subject", 1:10, sep = "_")

names(pre_bp_2) <- patient_2
names(post_bp_2) <- patient_2

diff_bp_2 = pre_bp_2 - post_bp_2

bp_df_2 <- data.frame(
  patient = patient_2,
  pre_bp = pre_bp_2,
  post_bp = post_bp_2,
  diff_bp = diff_bp_2
)
bp_df_2$bp_lower_120 <- bp_df_2$post_bp < 120
bp_df_2
```

2.  Now create and store a list with two elements:

    • 1st element named treatment and contains the first data frame you created.

    • 2nd element named placebo and contains the second data frame you created.

```{r}
data = list(treatment = bp_df, placebo = bp_df_2)
data
```

3.  Access the first list element using three different types of syntax (the result can be a list or just the data frame).

```{r}

# Can subset as a list
data[1]

# Can subset as a data frame
data[[1]]

# Can subset using the $ operator
data$treatment
```

4.  Use your list from question 2. In one line of code, access the pre_bp column of the placebo data frame.

```{r}
data$placebo$pre_bp
```
